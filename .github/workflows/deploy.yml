name: Deploy Pixoo Daemon

on:
  push:
    branches: [main]
    paths-ignore:
      - 'docs/**'
      - '*.md'
      - '.github/**'
      - 'legacy-code/**'
  workflow_dispatch:

env:
  DEPLOYMENT_HOST: miniserver24.lan
  DEPLOYMENT_USER: mba
  DEPLOYMENT_PATH: ~/Code/pixoo-daemon
  MOUNT_PATH: ~/docker/mounts/pixoo-daemon/app

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run linting
        run: npm run lint:errors

      - name: Check markdown
        run: npm run md:lint

      - name: Run tests (if available)
        run: npm test || echo "No tests configured"

  deploy:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Generate version info
        id: version
        run: |
          npm run build:version
          echo "version=$(jq -r .version version.json)" >> $GITHUB_OUTPUT
          echo "build_number=$(jq -r .buildNumber version.json)" >> $GITHUB_OUTPUT
          echo "git_commit=$(jq -r .gitCommit version.json)" >> $GITHUB_OUTPUT

      - name: Deploy to server
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.DEPLOYMENT_HOST }}
          username: ${{ secrets.DEPLOYMENT_USER }}
          key: ${{ secrets.DEPLOYMENT_SSH_KEY }}
          script: |
            set -e
            echo "🚀 Starting deployment of Pixoo Daemon..."
            echo "📋 Version: ${{ steps.version.outputs.version }}"
            echo "🔢 Build: #${{ steps.version.outputs.build_number }}"
            echo "📝 Commit: ${{ steps.version.outputs.git_commit }}"

            # Navigate to pixoo-daemon directory
            cd ${{ env.DEPLOYMENT_PATH }}

            # Pull latest changes
            echo "🔄 Pulling latest code..."
            git pull origin main

            # Make deployment script executable and run it
            echo "🔧 Running deployment script..."
            chmod +x scripts/deploy-server.sh
            ./scripts/deploy-server.sh

            echo "🎉 Deployment completed successfully!"

      - name: Send deployment notification
        if: always()
        run: |
          if [ "${{ job.status }}" == "success" ]; then
            echo "✅ Deployment successful - notification would be sent here"
          else
            echo "❌ Deployment failed - failure notification would be sent here"
          fi
